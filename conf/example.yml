---

# Auto 4 example YAML configuration file

# Core libraries to load.
#
# irc: IRC protocol framework.
libraries:
- irc

# List of IRC servers to which to connect.
irc:
  # Server name, followed by properties.
  freenode:
    
    # Server address.
    address: irc.freenode.net
    
    # Server port.
    port: 7000
    
    # Whether to use SSL: true or false.
    useSSL: true
    
    # Nicknames. Auto will use the first one, and if it fails, it will try
    # each one until success is achieved.
    nickname:
    - moobot
    - altnick
    
    # Username or ident.
    username: Auto
    
    # Real name or GECOS.
    realName: Auto
    
    # SASL options. Remove this if you don't want to use SASL or the server
    # does not support it.
    SASL:
      # Timeout in seconds. 15s is reasonable.
      timeout: 15
      # Account as which to identify.
      username: moobot
      # Password for the account.
      password: moopass

    # List of channels to join automatically.
    autojoin:
    - name: '#autoproject' # The channel name. Don't forget the quotes because channels have octothorpes.
      key: ~ # Key, if necessary.

  # Another server. Add as many as you wish.
  Rizon:
    
    address: irc.rizon.net
    port: 6667
    useSSL: false
    nickname:
    - moobot
    - altnick
    username: Auto
    realName: Auto

    # Identify the traditional way; that is, by privately messaging a service.
    nickIdentify:
      # The name of the service--usually NickServ.
      service: NickServ
      # The command to use--usually identify.
      command: identify
      # The password to use. If the server uses Atheme, we suggest putting the accountname followed by
      # the password here, so that identification never fails.
      password: moopass

# Database configuration
#
# In addition to the 'sequel' Ruby gem, you will need some additional gem(s) depending
# upon the database management system of your choice:
#
# SQLite users: sqlite3
# MySQL users: mysqlplus
# Postgres users: pg
#
# If your DBMS is not supported and you would like it to be, we'll consider a feature
# request which you may submit either to the mailing group (http://j.mp/autotalk), or
# to the issue hub (https://github.com/Auto/Auto/issues). Alas, we regret to inform
# our users that the official database model hasn't support for NoSQL systems, so such
# NoSQL database management systems as MongoDB, Redis, CouchDB, Cassandra, etc. cannot
# be officially supported at this time, although that's not to say a plugin is
# incapable of extending Auto to support them.
database:

  # The type of database.
  #
  # sqlite (recommended): A very simple SQL database system which outputs to a file.
  # [needs] name
  #
  # mysql: A popular SQL system based on a network server/client model.
  # [needs] name, hostname, username, password
  #
  # postgres: An advanced SQL system popularly employed as an alternative to MySQL.
  # [needs] name, hostname, username, password
  type: sqlite

  # Database name. 
  #
  # SQLite users should provide a path to a file (e.g., you may use 'auto.db'
  # to write to /path/to/auto/installation/auto.db, or perhaps '/home/your_home_dir/autobot.db')
  #
  # MySQL and Postgres users should provide the name of the database; e.g. 'autobot'
  name: auto.db

  # Hostname to which to connect.
  #
  # This is needed only for MySQL and Postgres.
  hostname: localhost

  # Username as which to authenticate.
  #
  # This is needed only for MySQL and Postgres.
  username: auto

  # Password associated with this username.
  #
  # This is needed only for MySQL and Postgres.
  password: insecurepassword123
